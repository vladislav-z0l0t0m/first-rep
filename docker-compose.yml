services:
  postgres:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
    ports:
      - '27017:27017'
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  nest-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest-app
    restart: always
    depends_on:
      - postgres
    environment:
      DATABASE_URL: ${DATABASE_URL}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
      PORT: ${PORT}
      JWT_SECRET: ${JWT_SECRET}
      INTERNAL_API_KEY: ${INTERNAL_API_KEY}
    command: npm run start:dev
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - app-network

  auth-service:
    build:
      context: ../inst-auth
      dockerfile: Dockerfile
    container_name: auth-service
    restart: always
    depends_on:
      - mongodb
    ports:
      - '3001:3001'
    environment:
      AUTH_PORT: ${AUTH_PORT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN}
      MONGODB_URI: ${MONGODB_URI}
      SESSION_SECRET: ${SESSION_SECRET}
      MAIN_APP_URL: ${MAIN_APP_URL}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CALLBACK_URL: ${GOOGLE_CALLBACK_URL}
      FACEBOOK_APP_ID: ${FACEBOOK_APP_ID}
      FACEBOOK_APP_SECRET: ${FACEBOOK_APP_SECRET}
      FACEBOOK_CALLBACK_URL: ${FACEBOOK_CALLBACK_URL}
      NODE_ENV: ${NODE_ENV}
      INTERNAL_API_KEY: ${INTERNAL_API_KEY}
    command: npm run start:dev
    volumes:
      - ../inst-auth:/app
      - /app/node_modules
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - '80:80'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - nest-app
      - auth-service
    networks:
      - app-network

volumes:
  pgdata:
  mongodb_data:

networks:
  app-network:
    driver: bridge
